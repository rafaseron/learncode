		-> HTML <-

HTML é a linguagem padrão de marcação para criar páginas da Web
HTML descreve a estrutura de uma página da Web. Consiste em uma série de elementos, os quais dizem ao navegador como exibir o conteúdo
Elementos HTML rotulam peças de conteúdo como "este é um título", "este é um parágrafo", "este é um link", etc.
*HTML não é case sensitive

>> COMO VALIDAR SE O CODIGO HTML ESCRITO ESTÁ CORRETO: https://validator.w3.org

// 1. SINTAXE BASICA:

<!DOCTYPE html>  //diz que esse é um documento HTML5
<html lang="pt-BR">  //elemento raiz de uma pagina HTML

<head>	//elemento de cabeçalho
<meta charset="utf-8">  //metadados da codificação de caracteres que estarão na pagina
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title> Page Title </title> //elemento especifica um título para a página HTML (que é mostrado na barra de título do navegador ou na guia da página
</head>

/*a TAG head inteira são apenas de metadados sobre o HTML*/

<body> //elemento define o corpo do documento, e é um recipiente para todos os conteúdos visíveis, como títulos, parágrafos, imagens, hiperlinks, tabelas, listas, etc
<h1> My First Heading </h1> //define uma grande primeira posição (por exemplo um titulo do corpo)
<p> My first paragraph. </p> //paragrafo
</body>

/*a TAG body é tudo que o usuario numa pagina web (front end)*/

</html>

// 2. HTML BASICO:
- Titulo:
<h1> This is heading 1 </h1>
<h2> This is heading 2 </h2>
<h3> This is heading 3 </h3>

- Paragrafo:
<p> This is a paragraph. </p>
<p> This is another paragraph. </p>

- Links:
<a href="https://www.w3schools.com"> This is a link </a>

- Imagens:  // definidas com a tag.<img> // arquivo de origem (), texto alternativo (), e são fornecidos como atributos:srcaltwidthheight
<img src="w3schools.jpg" alt="W3Schools.com" width="104" height="142"> 

// 3. ELEMENTS /*O elemento HTML é tudo, desde a tag inicial até a tag final*/

exemplo: <h1>	My First Heading	</h1>
	tag inicial		elemento	tag final


** Quebra de linha: tag <br>
<p>This is a <br> paragraph with a line break.</p>

// 4. ATTRIBUTES  /*anatomia das tags*/   /***Todos os elementos HTML podem ter atributos*/  /*são os dados que ficam e acompanham as tags, para identificar, definir, dentre outras funções*/
<nomedatag  atributo="valor">

- href //é um atributo de dentro da tag <a> (links)
<a href="https://www.w3schools.com">Visit W3Schools</a>

- src //atributo de img. especifica o caminho para ser exibida a imagem
<img src="img_girl.jpg">

- width e height //atributo de largura e altura da imagem
<img src="img_girl.jpg" width="500" height="600">

- alt //especifica um texto alternativo para caso a imagem não carregue corretamente
<img src="img_girl.jpg" alt="Girl with a jacket">

- estilo //adicona cor, fonte, tamanho, etc.
<p style="color:red;">This is a red paragraph.</p>

- lang //declara o idioma dentro da tag HTML
<html lang="en">

- tittle //atributo do paragrafo <p> : o valor do atributo é visualizado como uma dica/ferramenta quando coloca o mouse em cima
<p title="I'm a tooltip">This is a paragraph.</p>

> Sobre aspas simples e duplas: recomenda-se o uso de aspas para definir algum valor a um atributo. Temos um uso variavel de uso das aspas,
quando o conteudo declarado necessita, também, de aspas.
exemplo:
<p title='John "ShotGun" Nelson'>
<p title="John 'ShotGun' Nelson">

// 4.1 ATRIBUTOS: id (identificadores) e class  /*entendendo sua importante e uso*/
por regra na hora de escrita, o id pode ter um valor unico em cada pagina. já as classes, podemos repetir sua nomenclatura.

<h1 id="cabecalho-1" class="escrita vermelha">  </h1>
<h1 id="cabecalho-2" class="escrita vermelha">  </h1>  //vejamos que não repetimos o valor do identificador da primeira liha. já as classes, podemos ter repetições.
 
/*o id serve para identificar determinado e unico item especifico na pagina.*/	/*é identificação é importantissima na hora de utilizar CSS e JS*/

<h1 id="cabecalho-2" class="escrita vermelha letra-negrito">  //podemos ter mais de uma classe por atributos também. 

**exemplo de uso de id com CSS basico:

<head>
   <style>
	h1{					/*quando vamos identificar um atributo HTML para ser aplicado CSS: escrevemos apenas o nome do atributo: h1*/
		background: blue;
	}
	#cabecalho-2{		/*quando vamos identificar um id (identificador) para ser aplicado CSS: escrevemos #nome-identificador: #cabecalho-2*/
		background: red;
		
	.escrita-vermelha{	/*quando vamos identificar uma classe HTML para ser aplicado CSS: escrevemos apenas .nome-classe: .escrita-vermelha*/
		background: green;
	}

	}
   </style>
</head>

<body>
<h1 id="cabecalho-1" class="escrita-vermelha">  </h1>
<h1 id="cabecalho-2" class="escrita-vermelha">  </h1>
</body>

**EXISTE ORDEM DE PRIORIDADE: uma tag id é uma das mais altas prioridades na hora de aplicar o CSS. Seu uso sobrescreve todos os usos de outro tipo de identificação
o id só não sobrescreve se escrevemos que é !important, por exemplo: background: green !important;  /*não é recomendado utilizar muito, pois força o navegador*/
> DICA: priorizar utilizar as classes, primeiramente, na hora de estilizar com CSS

// 5. TITULOS  /*tags de cabeçalho*/   //uma das tags mais importantes da pagina. é, por exemplo, uma das tag que o Google e Bing utilizam para mostrar o conteudo no buscador
<h1> titulo da noticia </h1>  

>> Vão de h1 até h6 (sua ordem de grandeza [referindo-se a semantica] ou prioridade, quanto tamanho)  /*também, diz respeito a quais itens serão lidos como titulos e subtitulos por aparelhos e recursos (software) de leitura
por acessibilidade de problemas visuais*/

<h1> </h1>  //mais importante
<h2> </h2>  //menos importante que o h1
<h3> </h3>  //menos importante que o h2
<h4> </h4> //menos importante que o h3
<h5> </h5>		...
<h6> </h6>		...

// 6. TAGS HTML  /*notas por importancia sobre um texto de acessibilidade e algumas outras tags*/

>> TAGS ABAIXO PODEM SER UTILIZADAS DENTRO DE UM PARAGRAFO (TAGS INLINE) <p> </p>

	- bold vs strong
		<b> </b> :tag que adiciona negrito na palavra -> é um estado fisico (de letra pequena a negrito)
		<strong> </strong> : tag que muda o sentido lógico da palavra -> é um estado logico (interpretado pelos leitores de acessibilidade, palavra mais forte)

	- italico vs enfaze
		<i> </i> :tag que adiciona italico na palavra
		<em> </em> :tag que visualmente é igual a italico, mas muda o significado de uma palavra, da mais enfase

	- del vs s
		<s> </s>: tag que visualmente adiciona o riscado no texto
		<del> </del> :tag que visualmente ... e semanticamente deleta uma palavra, com fins de inserir outra

	- in (insert) vs u
		<u> </u>: tag que visualmente adiciona um sublinhado
		<in> </in> :tag que visualmente ... e semanticamente insere uma palavra, e a destaca por estar sendo inserida por meios de uma errata

- small: <small> </small>: letra pequena
- sup: <sup> </sup>: letra de potencia ² ³
- sub: <sub> </sub>: letra pequena no meio da palavra (em H2O, o 2 é para ser pequeno, sub)
- <br>: quebra de linha. tag não tem corpo, é só escrever;
- <q> </q>: uma "citação"  -> ex de uso:   <q cite="https://www.site ..."> texto retirado do site citado anteriormente </q>
- <span> </span>: tag inline, da pra utilizar para aplicar css numa palavra (tamanho, cor, etc) ou trecho especifico no meio do paragrafo

>> TAGS FORA DE PARAGRAFOS <p> </p>
	- Tags de bloco (BLOCKED, SÃO BLOCOS TEM PRIORIDADE SEMANTICA) -> podem existir paragrafos dentro do bloco, mas não podem ter (semanticamente), blocos dentro de paragrafos -> como se bloco fosse a pasta raiz / e paragrafo a /home
exemplo: <blockquote cite="https://www.site ..."> <p> paragrafo de citação dentro do bloco, raiz </p> </blockquote>

	- <hr> :tag de linham para dividir um paragrafo de outro

	- <code> </code> :tag que indica que é uma linha de codigo -> mudança apenas visual no monoespaçamento das letras
		***quando a tag code é utilizada dentro da tag pre (ao inves de só: p) -> espaça certinho o codigo -> exemplo de uso:   <pre> <code> </code> </pre>
>> tag <pre> </pre> : utiliza a preformatação de como ficou o codigo. como se fosse o word quando pega as infos do site já preformatadas.

	- <div> </div> :bloco de divisão

// 6. PARAGRAFOS
// 7. ESTILOS
// 8. FORMATAÇÃO
// 9. COTAÇÕES
// 10. COMENTÁRIOS
// 11. CORES
// 12. HTML CSS
// 13. LINKS
// 14. IMAGENS HTML

W3 -> PAREI EM: https://www.w3schools.com/html/html_paragraphs.asp
UDEMY -> PAREI EM: 559. Conheça todas as tags HTML

	basicamente: na udemy já começou estes conteudos:
			https://www.w3schools.com/html/html_id.asp
			https://www.w3schools.com/html/html_classes.asp
			https://www.w3schools.com/html/html_blocks.asp